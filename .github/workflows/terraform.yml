name: Create EKS Cluster and Deploy MySQL

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  CLUSTER_NAME: my-eks-cluster
  DB_PASSWORD: mysecretpassword

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Terraform
        run: |
          curl -LO https://releases.hashicorp.com/terraform/0.15.4/terraform_0.15.4_linux_amd64.zip
          unzip terraform_0.15.4_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
        shell: bash

      - name: Set up Terraform workspace
        run: terraform workspace new eks || terraform workspace select eks
        working-directory: terraform

      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform

      - name: Plan Terraform changes
        id: plan
        run: terraform plan -var="cluster_name=${{ env.CLUSTER_NAME }}"
        working-directory: terraform

      - name: Create EKS cluster
        if: steps.plan.outputs.exit-code == 0
        run: terraform apply -auto-approve -var="cluster_name=${{ env.CLUSTER_NAME }}"
        working-directory: terraform

      - name: Configure kubectl
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.CLUSTER_NAME }}

      - name: Deploy MySQL
        run: |
          kubectl apply -f mysql-persistent-volume.yaml
          kubectl apply -f mysql-deployment.yaml

      - name: Run tests
        run: |
          # Run your tests here

      - name: Destroy EKS cluster
        run: terraform destroy -auto-approve -var="cluster_name=${{ env.CLUSTER_NAME }}"
        working-directory: terraform
